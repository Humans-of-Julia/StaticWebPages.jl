var documenterSearchIndex = {"docs":
[{"location":"pages/#Pages","page":"Pages","title":"Pages","text":"","category":"section"},{"location":"pages/","page":"Pages","title":"Pages","text":"A page is composed of a name and a list of sections which can each be either single or double column. Each section is either a single Item or a pair of Items.","category":"page"},{"location":"pages/#A-publication-page-with-only-one-single-column-section-(by-default,-publications-spread-over-two-columns-on-large-screens)","page":"Pages","title":"A publication page with only one single column section (by default, publications spread over two columns on large screens)","text":"","category":"section"},{"location":"pages/","page":"Pages","title":"Pages","text":"######################################\n# publications.html\n#   option 1: background for the page is set to start with white to emphasize the bibliographic items\n######################################\npage(\n    title=\"publications\",\n    background=bg_white,\n    sections=[\n        Section(\n            title=\"Publications\",\n            items=Publications(\"publications.bib\")\n        )\n    ]\n)","category":"page"},{"location":"pages/#An-index-page-with-a-TextSection-and-a-double-column-(Card,-TimeLine)","page":"Pages","title":"An index page with a TextSection and a double column (Card, TimeLine)","text":"","category":"section"},{"location":"pages/","page":"Pages","title":"Pages","text":"######################################\n# index.html\n# biography\n# academic positions | honors, awards, and grants\n######################################\n\n# using previously defined items, we can define sections\nsection_biography = Section(title=\"Biography\", items=biography)\npositions_grants = Double(\n    Section(title=\"Positions\", items=work_cards),\n    Section(title=\"Grants\", items=grants)\n)\n\n# the next line will add the index page to the generated content\npage(\n    title=\"index\",\n    sections=[section_biography, positions_grants]\n)","category":"page"},{"location":"pages/#The-hide-option-for-page-and-Section","page":"Pages","title":"The hide option for page and Section","text":"","category":"section"},{"location":"pages/","page":"Pages","title":"Pages","text":"# Both page() and Section() can take the hide option\n# If a page is hidden, it will not be generated, but it will still appear in the side menu\n# If a section is hidden, it will just not appear (and the content will not be generated, including request to external API, such as GitHub)\n\npage(\n    title=\"software\",\n    background=bg_white,\n    sections=[\n        Section(\n            title=\"Software\",\n            hide=true, # default to false\n            items=github,\n        )\n    ]\n)","category":"page"},{"location":"themes/#Themes","page":"Theming","title":"Themes","text":"","category":"section"},{"location":"themes/","page":"Theming","title":"Theming","text":"The only available theme for the moment is using Zurb foundation responsive front-end. Customization of this theme and addition of other themes are expected in a near future (contributions/suggestions/requests are welcome).","category":"page"},{"location":"public/#Public","page":"Public","title":"Public","text":"","category":"section"},{"location":"public/","page":"Public","title":"Public","text":"Pages = [\"public.md\"]\nDepth = 5","category":"page"},{"location":"public/#StaticWebPages.AbstractItem","page":"Public","title":"StaticWebPages.AbstractItem","text":"AbstractItem\n\nAn abstract supertype for all items making the content of Sections.\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.Block","page":"Public","title":"StaticWebPages.Block","text":"Block\n\nAn item to construct a sequence of paragraphs with a (possibly empty) sequence of images on the side. Instead of images, an iframe's url can be given.\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.Block-Tuple{Any, Any}","page":"Public","title":"StaticWebPages.Block","text":"Block(paragraphs, images)\n\nConstruct a Block with paragraphs and images.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.Block-Tuple{Any, String}","page":"Public","title":"StaticWebPages.Block","text":"Block(paragraphs, iframe::String)\n\nConstruct a Block with paragraphs and an iframe.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.Card","page":"Public","title":"StaticWebPages.Card","text":"Card\n\nA Card structure to fill a Deck item.\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.CardColor","page":"Public","title":"StaticWebPages.CardColor","text":"CardColor\n\nAn enumeration of the different background colors available. It will need to be adjusted for Theme and SubTheme.\n\ncard_blue\ncard_green\ncard_red\ncard_orange\ncardjuliablue\ncardjuliagreen\ncardjuliapurple\ncardjuliared\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.GitRepo","page":"Public","title":"StaticWebPages.GitRepo","text":"GitRepo\n\nA structure to store the URLs of git repositories and an associated filter for possible bot filtering.\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.GitRepo-Tuple{Vararg{Union{Pair{String, Vector{String}}, String}}}","page":"Public","title":"StaticWebPages.GitRepo","text":"GitRepo(args::RepoLabels...; filter=[\"github-actions[bot]\"])\n\nStores the URLs of git repositories and an associated filter. By default filters \"github-actions[bot]\".\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.TimeLine","page":"Public","title":"StaticWebPages.TimeLine","text":"TimeLine\n\nA structure for a TimeLine item. It is compose of Dots.\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.TimeLine-Tuple{TimeLineColor, Vararg{StaticWebPages.Dot}}","page":"Public","title":"StaticWebPages.TimeLine","text":"TimeLine(color::TimeLineColor, args::Dot...)\nTimeLine(args::Dot...; color=tl_blue)\n\nConstruct a TimeLime with the dots in args. The TimeLine color can be set to: tl_blue, tl_green, tl_red, tl_orange, tl_julia_blue, tl_julia_green, tl_julia_purple, tl_julia_red, tl_julia.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.TimeLineColor","page":"Public","title":"StaticWebPages.TimeLineColor","text":"TimeLineColor\n\nAn enumeration of the different TimeLinecolors available. It will need to be adjusted forThemeandSubTheme`.\n\ntl_blue\ntl_green\ntl_red\ntl_orange\ntljuliablue\ntljuliagreen\ntljuliapurple\ntljuliared\ntl_julia\n\n\n\n\n\n","category":"type"},{"location":"public/#StaticWebPages.export_site-Tuple{}","page":"Public","title":"StaticWebPages.export_site","text":"export_site(; d::Dict{String,String}=local_info, rm_dir::Bool=false, opt_in::Bool=false)\n\nExport the generated website based on d (default to local_info). The content and site folders need to be valid. If rm_dir is true, the site folder will be deleted before the website is generated.\n\nUsers can choose to support StaticWebPages.jl by setting opt_in to true. This will add a small banner in the side navigation menu stating \"This website was generated using StaticWebPages.jl\" and links to the GitHub repository.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.iframe-Tuple{Any}","page":"Public","title":"StaticWebPages.iframe","text":"iframe(url)\n\nConstruct an iframe from url.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.images-Tuple{Vararg{Pair{AbstractString, AbstractString}}}","page":"Public","title":"StaticWebPages.images","text":"images(args::Image...)\n\nConstruct an ordered sequence of images for a Block item. An Image should be given as a Pair of strings.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.paragraphs-Tuple{Vararg{String}}","page":"Public","title":"StaticWebPages.paragraphs","text":"paragraphs(args::String...)\n\nConstruct an ordered sequence of paragraphs (text entries) for a Block item.\n\n\n\n\n\n","category":"method"},{"location":"public/#StaticWebPages.upload_site","page":"Public","title":"StaticWebPages.upload_site","text":"upload_site(d::Dict{String,String}=local_info)\n\nWill upload the generated website according to the info in d.\n\n\n\n\n\n","category":"function"},{"location":"internal/#Internals","page":"Internals","title":"Internals","text":"","category":"section"},{"location":"internal/","page":"Internals","title":"Internals","text":"Pages = [\"internal.md\"]\nDepth = 5","category":"page"},{"location":"internal/#StaticWebPages.academicons","page":"Internals","title":"StaticWebPages.academicons","text":"academicons\n\nA dictionary that tracks the HTML/CSS attributes for icons from font-awesome.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.color_to_card","page":"Internals","title":"StaticWebPages.color_to_card","text":"color_to_card\n\nA dictionary to translate the enumeration in CardColor to actual HTML/CSS attributes. A card can be composed of either one or two colors.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.color_to_label","page":"Internals","title":"StaticWebPages.color_to_label","text":"color_to_label\n\nA dictionary to translate the enumeration in ColorLabel to actual HTML/CSS labels. An optional black-text color for text is given (it defaults to white-text).\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.color_to_timeline","page":"Internals","title":"StaticWebPages.color_to_timeline","text":"color_to_timeline\n\nA dictionary to translate the enumeration in TimeLineColor to actual HTML/CSS attributes.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.content","page":"Internals","title":"StaticWebPages.content","text":"content\n\nAn ordered dictionary to store the different web pages.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.info","page":"Internals","title":"StaticWebPages.info","text":"info\n\nA dictionary, with default values, used to customize personal information.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.local_info","page":"Internals","title":"StaticWebPages.local_info","text":"local_info\n\nA dictionary that stores local information required to build and export the website.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.publication_labels","page":"Internals","title":"StaticWebPages.publication_labels","text":"publication_labels\n\nAn ordered dictionary to store the attributions of labels to keywords in a Publications.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.user_to_name","page":"Internals","title":"StaticWebPages.user_to_name","text":"user_to_name\n\nA dictionary to translate user id (such as GitHub id) to real name. Normal use is that if an entry is found, then the id will be replaced by the appropriate name. Otherwise, the id is kept in use.\n\nWhen a list of id is too long, priority is given to the id with an associated name.\n\n\n\n\n\n","category":"constant"},{"location":"internal/#StaticWebPages.AbstractSection","page":"Internals","title":"StaticWebPages.AbstractSection","text":"AbstractSection\n\nAn abstract supertype for all Sections.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.BackgroundColor","page":"Internals","title":"StaticWebPages.BackgroundColor","text":"FieldSort\n\nAn enumeration of the different background colors available. It will need to be adjusted for Theme and SubTheme.\n\nbg_none\nbg_white\nbg_grey\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.ColorLabel","page":"Internals","title":"StaticWebPages.ColorLabel","text":"ColorLabel\n\nAn enumeration of the different colors available for labels.\n\nred\ngreen\nyellow\nblue\norange\npurple\ncyan\nmagenta\nlime\npink\nteal\nlavender\nbrown\nbeige\nmaroon\nmint\nolive\napricot\nnavy\ngrey\nwhite\nblack\n\nCurrently, label colors cycle once the limit has been reached. Creation of cycles with different varieties of colors is welcomed.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Deck","page":"Internals","title":"StaticWebPages.Deck","text":"Deck\n\nA Deck item, composed of cards.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Deck-Tuple{CardColor, Vararg{Any}}","page":"Internals","title":"StaticWebPages.Deck","text":"Deck(color::CardColor, args...)\nDeck(args...; color::CardColor=card_blue)\n\nConstruct a Deck with the cards in args. The Deck color can be set to: card_blue, card_green, card_red, card_orange, card_julia_blue, card_julia_green, card_julia_purple, card_julia_red.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.Dot","page":"Internals","title":"StaticWebPages.Dot","text":"Dot\n\nA structure for each Dot entry in a TimeLine.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Double","page":"Internals","title":"StaticWebPages.Double","text":"Double\n\nA structure for double columns sections.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Double-Tuple{StaticWebPages.Section, StaticWebPages.Section}","page":"Internals","title":"StaticWebPages.Double","text":"Double(first::Section, second::Section)\n\nConstruct a two-columns section.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.Email","page":"Internals","title":"StaticWebPages.Email","text":"Email\n\nEmail inline Item. Can be obfuscated.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.FieldSort","page":"Internals","title":"StaticWebPages.FieldSort","text":"FieldSort\n\nAn enumeration of the different sorting rules for a bibliography item.\n\nunsorted\nrequired\nlexicographic\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Git","page":"Internals","title":"StaticWebPages.Git","text":"Git\n\nA structure to store the data of a git repository.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Git-Tuple{Union{Pair{String, Vector{String}}, String}, Any}","page":"Internals","title":"StaticWebPages.Git","text":"Git(gh_rl::RepoLabels, git_filter)\n\nCreate a Git element with the elements found at gh_rl and filtered with git_filter.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.Link","page":"Internals","title":"StaticWebPages.Link","text":"Link\n\nStructure to handle html links within an <: AbstractItem. Behaviour is similar to the <a> html markup.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Nest","page":"Internals","title":"StaticWebPages.Nest","text":"Nest\n\nA structure to handle nested items.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Page","page":"Internals","title":"StaticWebPages.Page","text":"Page\n\nA structure to store a page information.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Parser","page":"Internals","title":"StaticWebPages.Parser","text":"Parser\n\nAn enumeration of the different parsers for a bibliography item.\n\nbibtex\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Publications","page":"Internals","title":"StaticWebPages.Publications","text":"Publications\n\nA structure that store all the information required to build and export a bibloigraphy.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Publications-Tuple{String}","page":"Internals","title":"StaticWebPages.Publications","text":"Publications(source::String; parser::Parser=bibtex, sort::FieldSort=required)\n\nImport a bibliography from source using parser. Some sorting options can be given through sort. Please check the Bibliography.jl package.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.Section","page":"Internals","title":"StaticWebPages.Section","text":"Section\n\nA structure for single column sections.\n\n\n\n\n\n","category":"type"},{"location":"internal/#StaticWebPages.Section-Tuple{}","page":"Internals","title":"StaticWebPages.Section","text":"Section(; keyargs...)\n\nCreate a new single column section.\n\nbgcolor::BackgroundColor = bg_none: set the section background to bg_none (default background), bg_white, or bg_grey.\nhide::Bool = false: if set to true, the section will not be built.\nitems::SectionItems=Nest(): the list of items in the section. Default to an empty Nested item.\ntitle::String=\"\".\ntitle_size=0 : If set to 0, the size will be inherited.\n\n)\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.GitBuilder-Tuple{GitHub.Repo, String}","page":"Internals","title":"StaticWebPages.GitBuilder","text":"GitBuilder(r, contributors)\n\nGenerate the Git struct according to the repository r. If r does not have all its fields specified (i.e. Nothing), then a default value is used instead.\n\nReturn g::Git\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.email-Tuple{StaticWebPages.Email}","page":"Internals","title":"StaticWebPages.email","text":"email(address::String; content::String=\"contact\", obfuscated::Bool=true)\nemail(e::Email)\n\nConstruct an email link. Can be obfuscated (default) to avoid bots spams.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.head-Tuple{Dict{String, String}, String}","page":"Internals","title":"StaticWebPages.head","text":"head(info::Dict{String,String}, page::String)\n\nGenerate the head section for a page given the global info.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.link-Tuple{StaticWebPages.Link}","page":"Internals","title":"StaticWebPages.link","text":"link(content::String, href::String)\nlink(l::Link)\n\nConstruct an html link within an <: AbstractItem. Behaviour is similar to the <a> html markup.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.nav-Tuple{Dict{String, String}, OrderedCollections.OrderedDict{String, Any}, String, Bool}","page":"Internals","title":"StaticWebPages.nav","text":"nav(info::Dict{String,String}, content::OrderedDict{String,Any}, page::String, opt_in::Bool)\n\nGenerate the navigation menu for a page given its content, and the global info. Please set opt_in to true to promote StaticWebPages.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.page-Tuple{}","page":"Internals","title":"StaticWebPages.page","text":"page(; keyargs...)\n\nConstructor for Page.\n\nbackground::BackgroundColor=bg_grey: by default, the first section of a page has a grey background.\nhide::Bool=false: an hidden page is not generated. However, it will appear in the navigation menu.\nsections::Vector{<:AbstractSection}=Vector{<:AbstractSection}(): list of sections that composes this page.\ntitle::String=\"\": Page's title, can be left empty.\n\n\n\n\n\n","category":"method"},{"location":"internal/#StaticWebPages.to_html","page":"Internals","title":"StaticWebPages.to_html","text":"to_html(args...)\n\nGenerate the html code associated with each element in the args collection.\n\n\n\n\n\n","category":"function"},{"location":"internal/#StaticWebPages.to_name-Tuple{String}","page":"Internals","title":"StaticWebPages.to_name","text":"to_name(user::String)\n\nTransform a user name as a repository collaborator to name (user). The name is taken from the global user_to_name dictionary.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.jl","page":"Bibliography.jl","title":"Bibliography.jl","text":"","category":"section"},{"location":"bibliography/","page":"Bibliography.jl","title":"Bibliography.jl","text":"Pages = [\"bibliography.md\"]\nDepth = 5","category":"page"},{"location":"bibliography/#Bibliography.sorting_rules","page":"Bibliography.jl","title":"Bibliography.sorting_rules","text":"const sorting_rules = Dict{Symbol, Vector{Symbol}}(\n\t\t\t\t:nty  => [:authors; :title; :date],\n\t\t\t\t:nyt  => [:authors; :date; :title],\n\t\t\t\t:nety => [:authors; :editors; :title; :date],\n\t\t\t\t:neyt => [:authors; :editors; :date; :title],\n\n:y    => [:date],     );\n\nImplemented sorting rules for bibliography entry sorting.\n\nSee also sort_bibliography!.\n\n\n\n\n\n","category":"constant"},{"location":"bibliography/#Bibliography.Publication","page":"Bibliography.jl","title":"Bibliography.Publication","text":"Publication\n\nA structure to store all the information necessary to web export.\n\n\n\n\n\n","category":"type"},{"location":"bibliography/#Bibliography.Publication-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.Publication","text":"Publication(entry)\n\nConstruct a Publication (compatible with web export) from an Entry.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.access_to_bibtex!-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.access_to_bibtex!","text":"access_to_bibtex!(fields, a)\n\nTransform the how-to-access field to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.bibtex_to_web-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.bibtex_to_web","text":"bibtex_to_web(source::String)\n\nConvert a BibTeX file to a web compatible format, specifically for the StaticWebPages.jl package.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.date_to_bibtex!-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.date_to_bibtex!","text":"date_to_bibtex!(fields, date)\n\nConvert a date to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.eprint_to_bibtex!-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.eprint_to_bibtex!","text":"eprint_to_bibtex!(fields, eprint)\n\nConvert eprint information to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.export_bibtex-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.export_bibtex","text":"export_bibtex(target, bibliography)\n\nExport a bibliography to BibTeX format.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.export_bibtex-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.export_bibtex","text":"export_bibtex(bibliography)\n\nExport a bibliography to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.export_bibtex-Tuple{BibInternal.Entry}","page":"Bibliography.jl","title":"Bibliography.export_bibtex","text":"export_bibtex(e::Entry)\n\nExport an Entry to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.export_cff-Tuple{BibInternal.Entry}","page":"Bibliography.jl","title":"Bibliography.export_cff","text":"export_cff(e::Entry, destination::String=\"CITATION.cff\", version::String=\"1.2.0\", add_preferred::Bool=true) -> Dict{String, Any}\n\nExport an Entry to a CFF file (default is CITATION.cff).\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.export_web-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.export_web","text":"export_web(bibliography::DataStructures.OrderedDict{String,BibInternal.Entry})\n\nExport a bibliography in internal format to the web format of the StaticWebPages.jl package. Also used by DocumenterCitations.jl.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.field_to_bibtex-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.field_to_bibtex","text":"field_to_bibtex(key, value)\n\nConvert an entry field to BibTeX format.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.fileio_load-Tuple{FileIO.File{FileIO.DataFormat{:BIB}}}","page":"Bibliography.jl","title":"Bibliography.fileio_load","text":"fileio_load(file; check)\nfileio_load(stream; check)\n\nThe FileIO interface to import a BibTeX file or parse a BibTeX string and convert it to the internal bibliography format. The check keyword argument can be set to :none (or nothing), :warn, or :error to raise appropriate logs.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.fileio_save-Tuple{FileIO.File{FileIO.DataFormat{:BIB}}, Any}","page":"Bibliography.jl","title":"Bibliography.fileio_save","text":"fileio_save(file, data)\nfileio_save(stream, data)\n\nExport a bibliography as a BibTeX string to a file or stream.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.import_bibtex-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.import_bibtex","text":"import_bibtex(input; check = :error)\n\nImport a BibTeX file or parse a BibTeX string and convert it to the internal bibliography format. The check keyword argument can be set to :none (or nothing), :warn, or :error to raise appropriate logs.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.import_cff-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.import_cff","text":"import_cff(input) -> Entry\n\nImport a CFF file and convert it to the internal bibliography format.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.in_to_bibtex!-Tuple{Any, Any}","page":"Bibliography.jl","title":"Bibliography.in_to_bibtex!","text":"in_to_bibtex!(fields::BibInternal.Fields, i::BibInternal.In)\n\nConvert the \"published in\" information to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.int_to_spaces-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.int_to_spaces","text":"int_to_spaces(n)\n\nMake a string of n spaces.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.na_if_empty-Tuple{AbstractString}","page":"Bibliography.jl","title":"Bibliography.na_if_empty","text":"na_if_empty(str::AbstractString) -> AbstractString\n\nUse placeholder value if string param is empty.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.name_to_string-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.name_to_string","text":"name_to_string(name::BibInternal.Name)\n\nConvert a name in an Entry to a string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.names_to_strings-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.names_to_strings","text":"names_to_strings(names)\n\nConvert a collection of names to a BibTeX string.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.recursive_isless","page":"Bibliography.jl","title":"Bibliography.recursive_isless","text":"recursive_isless(a::Entry, b::Entry, fields::Tuple{Symbol},\n                 depth::Int = 0)\n\nHelper function for sort_bibliography!.\n\nThis function allows recursive checking if a < b with descending importance. The importance set for the comparison is defined by the argument fields. This argument is a tuple consisting of symbols denoting the fields of the data type BibInternal.Entry. The ordering implies the importance.\n\nThe depth argument is purely for iterating/recursive purposes.\n\n\n\n\n\n","category":"function"},{"location":"bibliography/#Bibliography.select-Tuple{OrderedCollections.OrderedDict{String, BibInternal.Entry}, Vector{String}}","page":"Bibliography.jl","title":"Bibliography.select","text":"select(\n    bibliography::DataStructures.OrderedDict{String,Entry},\n    selection::Vector{String};\n    complementary::Bool = false\n    )\n\nSelect a part of a bibliography based on a given selection set of keys. If complementary is true, selection designates which entries will not be kept. By default, complementary is set to false.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.sort_bibliography!","page":"Bibliography.jl","title":"Bibliography.sort_bibliography!","text":"sort_bibliography!(\n    bibliography::DataStructures.OrderedDict{String,Entry},\n    sorting_rule::Symbol = :key\n    )\n\nSorts the bibliography in place.\n\nThe sorting order can be set by specifying the sorting_rule. The sorting is implemented via isless() functions. For detailed insight have a look at the isless() implementation of Julia and BibInternal.jl.\n\nSupported symbols for sorting_rule are:\n\n:key (default): sort by bibliography keys e.g. BibTeX keys or :id\nthe sorting rules defined in sorting_rules\n\ninfo: Note:\nThe sorting is not following explicitly bibliographic alphabetizing conventions. It follows standard comparator behaviour implied by the implemented isless() functions (string comparators).\n\n\n\n\n\n","category":"function"},{"location":"bibliography/#Bibliography.xcite-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xcite","text":"xcite(entry)\n\nFormat the BibTeX cite output of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xfile-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xfile","text":"xfile(entry)\n\nFormat the downloadable path of an Entry file for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xin-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xin","text":"xin(entry)\n\nFormat the appears-in field of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xlabels-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xlabels","text":"xlabels(entry)\n\nFormat the labels of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xlink-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xlink","text":"xlink(entry)\n\nFormat the download link of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xnames","page":"Bibliography.jl","title":"Bibliography.xnames","text":"xnames(entry, editors = false; names = :full)\n\nFormat the name of an Entry for web export.\n\nArguments:\n\nentry: an entry\neditors: true if the name describes editors\nnames: :full (full names) or :last (last names + first name abbreviation)\n\n\n\n\n\n","category":"function"},{"location":"bibliography/#Bibliography.xtitle-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xtitle","text":"xtitle(entry\n\nFormat the title of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"bibliography/#Bibliography.xyear-Tuple{Any}","page":"Bibliography.jl","title":"Bibliography.xyear","text":"xyear(entry)\n\nFormat the year of an Entry for web export.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages","page":"Home","title":"StaticWebPages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A user-friendly static website generator written in Julia. No programming nor webdev skills required!!! Entirely Open-Source (GPLv2 licence)!","category":"page"},{"location":"","page":"Home","title":"Home","text":"Although this generator originally targets academicians, it works out well for personal webpage and any static usage (front-end only) A more advanced static framework in Julia is available (cf Franklin.jl). For a full-stack web framework, please look at the great Genie.jl.","category":"page"},{"location":"","page":"Home","title":"Home","text":"This generator is for you if","category":"page"},{"location":"","page":"Home","title":"Home","text":"you want something simple to update and manage\nresponsive design (looks good on most devices)\nwant light load on the server and/or low bandwidth use\nhave no time/interest in making your own website by \"hand\"\nnew item/gadget access with a simple update in the julia command line","category":"page"},{"location":"","page":"Home","title":"Home","text":"The beta only uses text files and command lines, but the first stable release will also integrate a graphical user interface (GUI).","category":"page"},{"location":"","page":"Home","title":"Home","text":"I deeply apologize for those that tested the versions v0.1.x, as, from v0.2.0, the syntax has changed a lot. The reason is to add options to most components. It should not change drastically from now on.","category":"page"},{"location":"#How-does-it-work","page":"Home","title":"How does it work","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The user provides the content (text, images, files) and select which Items will display it. As simple as that. A full working example is provided here (or in the example folder). The result is available as http://baffier.fr","category":"page"},{"location":"#Installation","page":"Home","title":"Installation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The only requirement is to install Julia and this package (preferably through the package interface of Julia). Please install the last stable release of Julia on the official download page.","category":"page"},{"location":"","page":"Home","title":"Home","text":"In the Julia REPL (that you can launch as a standalone or call within a console), please enter Pkg REPL. To quote the package manager documentation:","category":"page"},{"location":"","page":"Home","title":"Home","text":"Pkg comes with a REPL. Enter the Pkg REPL by pressing ] from the Julia REPL. To get back to the Julia REPL, press backspace or ^C.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The following code snippet update the general registry of Julia's packages, then install the StaticWebPages.jl package.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(@v1.5) pkg> up\n(@v1.5) pkg> add StaticWebPages","category":"page"},{"location":"","page":"Home","title":"Home","text":"You can check that the installation is complete and trigger a precompilation of the package (usually take a few minutes) by using the following command.","category":"page"},{"location":"","page":"Home","title":"Home","text":"import StaticWebPages","category":"page"},{"location":"","page":"Home","title":"Home","text":"Please note that precompilation occurs at first use after installation and updates. The somewhat long compilation is related to the BibTeX parser and should occur rarely.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The package can be use from the REPL, but we recommend it to be used through a script file as the run.jl presented below. Running the script should be as simple as writing the following command line.","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia run.jl","category":"page"},{"location":"","page":"Home","title":"Home","text":"or in the REPL","category":"page"},{"location":"","page":"Home","title":"Home","text":"include(\"run.jl\")","category":"page"},{"location":"#Files-organization","page":"Home","title":"Files organization","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"A compressed template can be found in the example/ folder as either template.tar or template.zip.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The two first following files are the only requirement. However, most users will prefer to provide some images/pictures and additional files such as a cv, a bibliography, and some downloadable content.","category":"page"},{"location":"#Local-script-file:-run.jl","page":"Home","title":"Local script file: run.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"# import the website generator functions\nimport StaticWebPages\nimport StaticWebPages: local_info\n\n## private information (local folders, connection infos, etc.)\n# content and site paths are always required\nlocal_info[\"content\"] = \"path/to/content_folder\"\nlocal_info[\"site\"] = \"path/to/site_folder\"\n\n# necessary only if using the upload_site function\nlocal_info[\"protocol\"] = \"ftp\"\nlocal_info[\"user\"] = \"user\"\nlocal_info[\"password\"] = \"password\"\nlocal_info[\"server\"] = \"server_address\"\n\n# `rm_dir = true` will clean up the site folder before generating it again. Default to false.\n# `opt_in = true` will add a link to this generator website in the side menu. Default to false.\nStaticWebPages.export_site(d=local_info, rm_dir = true, opt_in = true)\n\n## upload website (comment/delete if not needed)\n# unfortunately does not work yet on windows system, please sync manually for the moment\nStaticWebPages.upload_site(local_info)","category":"page"},{"location":"#Content-folder","page":"Home","title":"Content folder","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"It must contain a content.jl file, and both an img and a files folders. Other content files, such as BibTeX bibliographic file should be put at the root of the folder (alongside content.jl). Please check the provided example if necessary.","category":"page"},{"location":"","page":"Home","title":"Home","text":"## content.jl\n######################################\n# General information\n######################################\n\n# The pic.jpg file needs to be put in the img folder\ninfo[\"avatar\"] = \"pic.jpg\"\n\n# The cv.pdf file needs to be put in the files folder\ninfo[\"cv\"] = \"cv.pdf\"\n\ninfo[\"lang\"] = \"en\"\ninfo[\"name\"] = \"Jean-François BAFFIER\"\ninfo[\"title\"] = \"Baffier\"\n\n# The email is obfuscated using a reverse email writing. The email appear normally (re-reverse) through CSS.\n# Although this is an effective technique against bots, it probably won't eventually.\n# The user is free to add additional security such as replacing '@' by 'at'.\ninfo[\"email\"] = \"jf@baffier.fr\"\n\n## icons to social networks in the side menu\n# comment/delete the unwanted entries\ninfo[\"researchgate\"] = \"https://www.researchgate.net/profile/Jean_Francois_Baffier\"\ninfo[\"googlescholar\"] = \"https://scholar.google.fr/citations?user=zo7FgSIAAAAJ&hl=fr\"\ninfo[\"orcid\"] = \"https://orcid.org/0000-0002-8800-6356\"\ninfo[\"dblp\"] = \"https://dblp.org/pid/139/8142\"\ninfo[\"linkedin\"] = \"https://www.linkedin.com/in/jeanfrancoisbaffier/\"\ninfo[\"github\"] = \"https://github.com/Azzaare\"\ninfo[\"twitter\"] = \"https://twitter.com/bioazzaare\"\n\n# The navigation side-bard default to 250px. If the content above doesn't fit, it be set to another length (in px)\ninfo[\"nav_width\"] = \"300\"\n\n######################################\n# publications.html\n######################################\npage(\n    title=\"publications\",\n    sections=[\n        Section(\n            title=\"Publications\",\n            items=Publications(\"publications.bib\")\n        )\n    ]\n)","category":"page"},{"location":"#License","page":"Home","title":"License","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This software is under the GPLv2 license.","category":"page"},{"location":"","page":"Home","title":"Home","text":"The main theme, and some items (BibTeX, Card, TimeLine) are inspired by the Word Press Faculty template of owwwlab, also under GPLv2. All elements inspired from that template can be found in the HTML/CSS code associated with those items.","category":"page"},{"location":"items/#Items","page":"Items","title":"Items","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"Items are guaranteed to be compatible with the main theme (and hopefully new ones will be too).","category":"page"},{"location":"items/#Publications-:-a-bibliography-based-on-a-bibliography-file-(uses-[Bibliography.jl](https://github.com/Humans-of-Julia/Bibliography.jl))","page":"Items","title":"Publications : a bibliography based on a bibliography file (uses Bibliography.jl)","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"# Simply provide a BibTeX file (usually .bib)\n# Path is based on the root of the content folder\nPublications(\"publications.bib\")","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"To add labels to the publications entries, please add a swp-labels field to your entries. A labels field is also accepted, but will also appear in the bibTeX citation generated for that article. For instance,","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"@inproceedings{parmentier2019introducing,\n    title={Introducing multilayer stream graphs and layer centralities},\n    author={Parmentier, Pimprenelle and Viard, Tiphaine and Renoust, Benjamin and Baffier, Jean-Francois},\n    booktitle={International Conference on Complex Networks and Their Applications},\n    pages={684--696},\n    year={2019},\n    organization={Springer},\n    doi = {10.1007/978-3-030-36683-4_55},\n    swp-labels = {conference, preprint, software, python, modern academics}\n}","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"(Image: Image of a Publication Item)","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"The attribution of colors is done automatically (within the limit of 22 labels, please issue a request if you need more ...)","category":"page"},{"location":"items/#Deck-of-Cards-:-a-list-of-ordered-and-clearly-separate-cards","page":"Items","title":"Deck of Cards : a list of ordered and clearly separate cards","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"Deck( # Start of the list\n    Card( # generic\n        \"Left\",\n        \"Right\",\n        \"Title\",\n        \"Content\"\n    ),\n    Card( # example\n        \"2019\",\n        \"current\",\n        \"Postdoctoral Researcher\",\n        \"RIKEN Center for Advanced Intelligence (AIP)\"\n    )\n ) # End of the list","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"(Image: Image of Card Items)","category":"page"},{"location":"items/#GitRepo-:-a-list-of-GitHub-repository-displayed-similarly-to-BibTeX-entries","page":"Items","title":"GitRepo : a list of GitHub repository displayed similarly to BibTeX entries","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"gitrepo = GitRepo( # currently work only with GitHub\n    \"Azzaare/CompressedStacks.cpp\",\n    \"Humans-of-Julia/StaticWebPages.jl\",\n    \"Humans-of-Julia/Bibliography.jl\",\n    \"Humans-of-Julia/BibParser.jl\",\n    \"Humans-of-Julia/BibInternal.jl\",\n    \"JuliaGraphs/LightGraphs.jl\",\n    \"JuliaGraphs/LightGraphsExtras.jl\",\n    \"JuliaGraphs/SNAPDatasets.jl\",\n    \"Azzaare/PackageStream.jl\"\n)","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"(Image: Image of a Git Item)","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"Please note that GitHub will restrict unidentified requests to a certain amount per IP within a time limit (that I don't know the value). If it happens, a message error from GitHub API will be returned.","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"To circumvent this issue, you can uncomment the line local_info[\"auth_tokens\"] = \"PATH/TO/token.jl' in run.jl (or add it if necessary) and edit the token.jl by updating your Personal Access Token.","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"token.jl aims to store all authentication tokens (for now, just GitHub). It content must be as follow (it is a simple variable containing your PAT):","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"# WARNING!\n# YOUR TOKENS SHOULD NEVER BE SHARED! IF YOU USE GIT, DON'T FORGET TO ADD `token.jl` TO YOUR `.gitignore` FILE!\n# YOU CAN ALSO STORE `token.jl` OUTSIDE OF THE STATICWEBPAGES FOLDER!\n\ngithub_pat = \"YOUR_PERSONAL_ACCESS_TOKEN\"","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"If the token is not valid, a 401: Bad Creditential error from GitHUb API will be returned.","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"As the comment states, take care not to push your token to your git repo! A good practice could be to store token.jl outside of your git project.","category":"page"},{"location":"items/#Block-:-Block-of-paragraphs-with-optional-images-on-the-side","page":"Items","title":"Block : Block of paragraphs with optional images on the side","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"# Examples with and without images\nbiography = Block(\n    paragraphs(\n    \"\"\"\n   Jean-François Baffier is an academic researcher at the RIKEN Center for Advanced Intelligence Project (AIP), and a consultant in Artificial Intelligence, Big Data Science, Data Structures, and Algorithms. As an academic, he gives back to society through fundamental research in computer science supplemented by open source libraries and software.\n    \"\"\",\n    \"\"\"\n    paragraph 2\n    \"\"\",\n    \"\"\"\n    paragraph 3\n    \"\"\",\n    \"\"\"\n    Jean-François implemented the StaticWebPages.jl package that was used to generate this website using a simple content file. This is a dummy email: $(email(\"dummy@example.purpose\"))\n    \"\"\"\n    ),\n    images(\n        Image(\"cs.png\", \"Compressed Stack\"),\n        Image(\"knowledge.png\", \"Flow of Knowledge\")\n    )\n)\n\nresearch = Block(\n    paragraphs(\n        \"\"\"\n        Principal Research Projects: Network Interdiction, Compressed Data Structures, Modern Academics, Explainable AI. Other research interest includes Graph Theory, Geometry, Optimization, and Games.\n        \"\"\",\n        \"\"\"\n        All of this research is supported by Open-Source Software and published as peer-review academic papers.\n        \"\"\"\n    ),\n    images()\n)","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"(Image: Image of a Block Item)","category":"page"},{"location":"items/#TimeLines-:-a-list-of-continuous-items","page":"Items","title":"TimeLines : a list of continuous items","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"grants = TimeLine(\n    Dot(\n        \"Top\",\n        \"Title\",\n        \"Content\"\n    ),\n    Dot(\n        \"2012-2015\",\n        \"MEXT Scholarship\",\n        \"The Monbukagakusho Scholarship is an academic scholarship offered by the Japanese Ministry of Education, Culture, Sports, Science and Technology (MEXT).\"\n    )\n)","category":"page"},{"location":"items/","page":"Items","title":"Items","text":"(Image: Image of a TimeLine Item)","category":"page"},{"location":"items/#Nest!-A-container-to-list-several-items-within-the-same-section","page":"Items","title":"Nest! A container to list several items within the same section","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"# Nest will take a tuple of any Items (except itself)\npositions_grants = Double(\n    Section(\n        title=\"Positions and grants\",\n        items=Nest(work_cards, grants)\n    ),\n    Section(title=\"Research Topics\", items=research)\n)","category":"page"},{"location":"items/#Inline-components","page":"Items","title":"Inline components","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"Some components can be inserted within the content of usual Items, such as Block, Card, Dot. Currently, only link and email are supported.","category":"page"},{"location":"items/#Email-can-obfuscated-(default),-or-not-...","page":"Items","title":"Email can obfuscated (default), or not ...","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"email(\"dummy@example.purpose\") # obfuscated\nemail(\n    \"dummy@example.purpose\";\n    content = \"content that appears as the email link\", # ignored if obfuscated\n    obfuscated = false\n    )","category":"page"},{"location":"items/#Link-can-be-an-internal-or-an-external-link","page":"Items","title":"Link can be an internal or an external link","text":"","category":"section"},{"location":"items/","page":"Items","title":"Items","text":"link(\"research project\", \"research.html\") # inner link\nlink(\"StaticWebPages.jl\", \"https://github.com/Humans-of-Julia/StaticWebPages.jl\")","category":"page"}]
}
