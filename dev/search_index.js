var documenterSearchIndex = {"docs":
[{"location":"","page":"Home","title":"Home","text":"CurrentModule = StaticWebPages","category":"page"},{"location":"#StaticWebPages","page":"Home","title":"StaticWebPages","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"","category":"page"},{"location":"","page":"Home","title":"Home","text":"Modules = [StaticWebPages]","category":"page"},{"location":"#StaticWebPages.academicons","page":"Home","title":"StaticWebPages.academicons","text":"academicons\n\nA dictionary that tracks the HTML/CSS attributes for icons from font-awesome.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.color_to_card","page":"Home","title":"StaticWebPages.color_to_card","text":"color_to_card\n\nA dictionary to translate the enumeration in CardColor to actual HTML/CSS attributes. A card can be composed of either one or two colors.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.color_to_label","page":"Home","title":"StaticWebPages.color_to_label","text":"color_to_label\n\nA dictionary to translate the enumeration in ColorLabel to actual HTML/CSS labels. An optional black-text color for text is given (it defaults to white-text).\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.color_to_timeline","page":"Home","title":"StaticWebPages.color_to_timeline","text":"color_to_timeline\n\nA dictionary to translate the enumeration in TimeLineColor to actual HTML/CSS attributes.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.content","page":"Home","title":"StaticWebPages.content","text":"content\n\nAn ordered dictionary to store the different web pages.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.info","page":"Home","title":"StaticWebPages.info","text":"info\n\nA dictionary, with default values, used to customize personal information.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.local_info","page":"Home","title":"StaticWebPages.local_info","text":"local_info\n\nA dictionary that stores local information required to build and export the website.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.publication_labels","page":"Home","title":"StaticWebPages.publication_labels","text":"publication_labels\n\nAn ordered dictionary to store the attributions of labels to keywords in a Publications.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.user_to_name","page":"Home","title":"StaticWebPages.user_to_name","text":"user_to_name\n\nA dictionary to translate user id (such as GitHub id) to real name. Normal use is that if an entry is found, then the id will be replaced by the appropriate name. Otherwise, the id is kept in use.\n\nWhen a list of id is too long, priority is given to the id with an associated name.\n\n\n\n\n\n","category":"constant"},{"location":"#StaticWebPages.AbstractItem","page":"Home","title":"StaticWebPages.AbstractItem","text":"AbstractItem\n\nAn abstract supertype for all items making the content of Sections.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.AbstractSection","page":"Home","title":"StaticWebPages.AbstractSection","text":"AbstractSection\n\nAn abstract supertype for all Sections.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.BackgroundColor","page":"Home","title":"StaticWebPages.BackgroundColor","text":"FieldSort\n\nAn enumeration of the different background colors available. It will need to be adjusted for Theme and SubTheme.\n\nbg_none\nbg_white\nbg_grey\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Block","page":"Home","title":"StaticWebPages.Block","text":"Block\n\nAn item to construct a sequence of paragraphs with a (possibly empty) sequence of images on the side. Instead of images, an iframe's url can be given.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Block-Tuple{Any, Any}","page":"Home","title":"StaticWebPages.Block","text":"Block(paragraphs, images)\n\nConstruct a Block with paragraphs and images.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Block-Tuple{Any, String}","page":"Home","title":"StaticWebPages.Block","text":"Block(paragraphs, iframe::String)\n\nConstruct a Block with paragraphs and an iframe.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Card","page":"Home","title":"StaticWebPages.Card","text":"Card\n\nA Card structure to fill a Deck item.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.CardColor","page":"Home","title":"StaticWebPages.CardColor","text":"CardColor\n\nAn enumeration of the different background colors available. It will need to be adjusted for Theme and SubTheme.\n\ncard_blue\ncard_green\ncard_red\ncard_orange\ncardjuliablue\ncardjuliagreen\ncardjuliapurple\ncardjuliared\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.ColorLabel","page":"Home","title":"StaticWebPages.ColorLabel","text":"ColorLabel\n\nAn enumeration of the different colors available for labels.\n\nred\ngreen\nyellow\nblue\norange\npurple\ncyan\nmagenta\nlime\npink\nteal\nlavender\nbrown\nbeige\nmaroon\nmint\nolive\napricot\nnavy\ngrey\nwhite\nblack\n\nCurrently, label colors cycle once the limit has been reached. Creation of cycles with different varieties of colors is welcomed.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Deck","page":"Home","title":"StaticWebPages.Deck","text":"Deck\n\nA Deck item, composed of cards.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Deck-Tuple{CardColor, Vararg{Any}}","page":"Home","title":"StaticWebPages.Deck","text":"Deck(color::CardColor, args...)\nDeck(args...; color::CardColor=card_blue)\n\nConstruct a Deck with the cards in args. The Deck color can be set to: card_blue, card_green, card_red, card_orange, card_julia_blue, card_julia_green, card_julia_purple, card_julia_red.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Dot","page":"Home","title":"StaticWebPages.Dot","text":"Dot\n\nA structure for each Dot entry in a TimeLine.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Double","page":"Home","title":"StaticWebPages.Double","text":"Double\n\nA structure for double columns sections.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Double-Tuple{StaticWebPages.Section, StaticWebPages.Section}","page":"Home","title":"StaticWebPages.Double","text":"Double(first::Section, second::Section)\n\nConstruct a two-columns section.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Email","page":"Home","title":"StaticWebPages.Email","text":"Email\n\nEmail inline Item. Can be obfuscated.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.FieldSort","page":"Home","title":"StaticWebPages.FieldSort","text":"FieldSort\n\nAn enumeration of the different sorting rules for a bibliography item.\n\nunsorted\nrequired\nlexicographic\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Git","page":"Home","title":"StaticWebPages.Git","text":"Git\n\nA structure to store the data of a git repository.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Git-Tuple{Union{Pair{String, Vector{String}}, String}, Any}","page":"Home","title":"StaticWebPages.Git","text":"Git(gh_rl::RepoLabels, git_filter)\n\nCreate a Git element with the elements found at gh_rl and filtered with git_filter.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.GitRepo","page":"Home","title":"StaticWebPages.GitRepo","text":"GitRepo\n\nA structure to store the URLs of git repositories and an associated filter for possible bot filtering.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.GitRepo-Tuple{Vararg{Union{Pair{String, Vector{String}}, String}}}","page":"Home","title":"StaticWebPages.GitRepo","text":"GitRepo(args::RepoLabels...; filter=[\"github-actions[bot]\"])\n\nStores the URLs of git repositories and an associated filter. By default filters \"github-actions[bot]\".\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Link","page":"Home","title":"StaticWebPages.Link","text":"Link\n\nStructure to handle html links within an <: AbstractItem. Behaviour is similar to the <a> html markup.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Nest","page":"Home","title":"StaticWebPages.Nest","text":"Nest\n\nA structure to handle nested items.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Page","page":"Home","title":"StaticWebPages.Page","text":"Page\n\nA structure to store a page information.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Parser","page":"Home","title":"StaticWebPages.Parser","text":"Parser\n\nAn enumeration of the different parsers for a bibliography item.\n\nbibtex\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Publications","page":"Home","title":"StaticWebPages.Publications","text":"Publications\n\nA structure that store all the informations required to build and export a bibloigraphy.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Publications-Tuple{String}","page":"Home","title":"StaticWebPages.Publications","text":"Publications(source::String; parser::Parser=bibtex, sort::FieldSort=required)\n\nImport a bibliography from source using parser. Some sorting options can be given through sort. Please check the Bibliography.jl package.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.Section","page":"Home","title":"StaticWebPages.Section","text":"Section\n\nA structure for single column sections.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.Section-Tuple{}","page":"Home","title":"StaticWebPages.Section","text":"Section(; keyargs...)\n\nCreate a new single column section.\n\nbgcolor::BackgroundColor = bg_none: set the section background to bg_none (default background), bg_white, or bg_grey.\nhide::Bool = false: if set to true, the section will not be built.\nitems::SectionItems=Nest(): the list of items in the section. Default to an empty Nested item.\ntitle::String=\"\".\ntitle_size=0 : If set to 0, the size will be inherited.\n\n)\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.TimeLine","page":"Home","title":"StaticWebPages.TimeLine","text":"TimeLine\n\nA structure for a TimeLine item. It is compose of Dots.\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.TimeLine-Tuple{TimeLineColor, Vararg{StaticWebPages.Dot}}","page":"Home","title":"StaticWebPages.TimeLine","text":"TimeLine(color::TimeLineColor, args::Dot...)\nTimeLine(args::Dot...; color=tl_blue)\n\nConstruct a TimeLime with the dots in args. The TimeLine color can be set to: tl_blue, tl_green, tl_red, tl_orange, tl_julia_blue, tl_julia_green, tl_julia_purple, tl_julia_red, tl_julia.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.TimeLineColor","page":"Home","title":"StaticWebPages.TimeLineColor","text":"TimeLineColor\n\nAn enumeration of the different TimeLinecolors available. It will need to be adjusted forThemeandSubTheme`.\n\ntl_blue\ntl_green\ntl_red\ntl_orange\ntljuliablue\ntljuliagreen\ntljuliapurple\ntljuliared\ntl_julia\n\n\n\n\n\n","category":"type"},{"location":"#StaticWebPages.GitBuilder-Tuple{GitHub.Repo, String}","page":"Home","title":"StaticWebPages.GitBuilder","text":"GitBuilder(r, contributors)\n\nGenerate the Git struct according to the repository r. If r does not have all its fields specified (i.e. Nothing), then a default value is used instead.\n\nReturn g::Git\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.email-Tuple{StaticWebPages.Email}","page":"Home","title":"StaticWebPages.email","text":"email(address::String; content::String=\"contact\", obfuscated::Bool=true)\nemail(e::Email)\n\nConstruct an email link. Can be obfuscated (default) to avoid bots spams.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.export_site-Tuple{}","page":"Home","title":"StaticWebPages.export_site","text":"export_site(; d::Dict{String,String}=local_info, rm_dir::Bool=false, opt_in::Bool=false)\n\nExport the generated website based on d (default to local_info). The content and site folders need to be valid. If rm_dir is true, the site folder will be deleted before the website is generated.\n\nUsers can choose to support StaticWebPages.jl by setting opt_in to true. This will add a small banner in the side navigation menu stating \"This website was generated using StaticWebPages.jl\" and links to the GitHub repository.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.head-Tuple{Dict{String, String}, String}","page":"Home","title":"StaticWebPages.head","text":"head(info::Dict{String,String}, page::String)\n\nGenerate the head section for a page given the global info.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.iframe-Tuple{Any}","page":"Home","title":"StaticWebPages.iframe","text":"iframe(url)\n\nConstruct an iframe from url.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.images-Tuple{Vararg{Pair{AbstractString, AbstractString}}}","page":"Home","title":"StaticWebPages.images","text":"images(args::Image...)\n\nConstruct an ordered sequence of images for a Block item. An Image should be given as a Pair of strings.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.link-Tuple{StaticWebPages.Link}","page":"Home","title":"StaticWebPages.link","text":"link(content::String, href::String)\nlink(l::Link)\n\nConstruct an html link within an <: AbstractItem. Behaviour is similar to the <a> html markup.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.nav-Tuple{Dict{String, String}, OrderedCollections.OrderedDict{String, Any}, String, Bool}","page":"Home","title":"StaticWebPages.nav","text":"nav(info::Dict{String,String}, content::OrderedDict{String,Any}, page::String, opt_in::Bool)\n\nGenerate the navigation menu for a page given its content, and the global info. Please set opt_in to true to promote StaticWebPages.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.page-Tuple{}","page":"Home","title":"StaticWebPages.page","text":"page(; keyargs...)\n\nConstructor for Page.\n\nbackground::BackgroundColor=bg_grey: by default, the first section of a page has a grey background.\nhide::Bool=false: an hidden page is not generated. However, it will appear in the navigation menu.\nsections::Vector{<:AbstractSection}=Vector{<:AbstractSection}(): list of sections that composes this page.\ntitle::String=\"\": Page's title, can be left empty.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.paragraphs-Tuple{Vararg{String}}","page":"Home","title":"StaticWebPages.paragraphs","text":"paragraphs(args::String...)\n\nConstruct an ordered sequence of paragraphs (text entries) for a Block item.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.to_html","page":"Home","title":"StaticWebPages.to_html","text":"to_html(args...)\n\nGenerate the html code associated with each element in the args collection.\n\n\n\n\n\n","category":"function"},{"location":"#StaticWebPages.to_name-Tuple{String}","page":"Home","title":"StaticWebPages.to_name","text":"to_name(user::String)\n\nTransform a user name as a repository collaborator to name (user). The name is taken from the global user_to_name dictionary.\n\n\n\n\n\n","category":"method"},{"location":"#StaticWebPages.upload_site","page":"Home","title":"StaticWebPages.upload_site","text":"upload_site(d::Dict{String,String}=local_info)\n\nWill upload the generated website according to the info in d.\n\n\n\n\n\n","category":"function"}]
}
